// <auto-generated />
using System;
using EventManagment.context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventManagment.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240729171345_inta")]
    partial class inta
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EventManagment.Models.Budget", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("EventID")
                        .HasColumnType("int");

                    b.Property<decimal>("Expenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Revenue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("EventID");

                    b.ToTable("Budgets");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EventID = 1,
                            Expenses = 5000.00m,
                            Revenue = 10000.00m
                        },
                        new
                        {
                            ID = 2,
                            EventID = 2,
                            Expenses = 3000.00m,
                            Revenue = 7000.00m
                        });
                });

            modelBuilder.Entity("EventManagment.Models.Event", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Date = new DateTime(2024, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A conference about the latest in technology.",
                            EventName = "Annual Tech Conference",
                            Location = "Convention Center",
                            Time = "10:00 AM",
                            UserID = 1
                        },
                        new
                        {
                            ID = 2,
                            Date = new DateTime(2024, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A workshop focused on health and wellness.",
                            EventName = "Health & Wellness Workshop",
                            Location = "Community Hall",
                            Time = "09:00 AM",
                            UserID = 1
                        });
                });

            modelBuilder.Entity("EventManagment.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlternativeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BasePrice")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KW_Allowed")
                        .HasColumnType("int");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "AP",
                            AlternativeNumber = "12345",
                            BasePrice = 0,
                            City = "Kadapa",
                            CreatedAt = new DateTime(2024, 6, 11, 13, 28, 12, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            KW_Allowed = 0,
                            MobileNumber = "1234567890",
                            Password = "admin1234",
                            PinCode = "12345",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2024, 7, 3, 9, 20, 12, 0, DateTimeKind.Unspecified),
                            UserType = "Organizer",
                            userName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Address = "AP",
                            AlternativeNumber = "12345",
                            BasePrice = 0,
                            City = "Kurnool",
                            CreatedAt = new DateTime(2024, 3, 6, 13, 30, 12, 0, DateTimeKind.Unspecified),
                            Email = "sai@gmail.com",
                            KW_Allowed = 0,
                            MobileNumber = "1234567890",
                            Password = "sai1234",
                            PinCode = "54321",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2024, 6, 12, 9, 20, 12, 0, DateTimeKind.Unspecified),
                            UserType = "Attendee",
                            userName = "sai"
                        },
                        new
                        {
                            Id = 3,
                            Address = "AP",
                            AlternativeNumber = "12345",
                            BasePrice = 0,
                            City = "Guntur",
                            CreatedAt = new DateTime(2024, 1, 6, 14, 30, 12, 0, DateTimeKind.Unspecified),
                            Email = "manu@gmail.com",
                            KW_Allowed = 0,
                            MobileNumber = "1234567890",
                            Password = "manu4321",
                            PinCode = "33333",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2024, 9, 3, 9, 20, 12, 0, DateTimeKind.Unspecified),
                            UserType = "Attendee",
                            userName = "manu"
                        },
                        new
                        {
                            Id = 4,
                            Address = "AP",
                            AlternativeNumber = "12345",
                            BasePrice = 0,
                            City = "Anantpur",
                            CreatedAt = new DateTime(2024, 3, 6, 20, 40, 12, 0, DateTimeKind.Unspecified),
                            Email = "rani@gmail.com",
                            KW_Allowed = 0,
                            MobileNumber = "1234567890",
                            Password = "rani43",
                            PinCode = "55555",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2024, 6, 3, 9, 20, 12, 0, DateTimeKind.Unspecified),
                            UserType = "Attendee",
                            userName = "Rani"
                        });
                });

            modelBuilder.Entity("EventManagment.Models.Budget", b =>
                {
                    b.HasOne("EventManagment.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("EventManagment.Models.Event", b =>
                {
                    b.HasOne("EventManagment.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
